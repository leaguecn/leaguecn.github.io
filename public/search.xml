<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[为Hexo添加流程图支持]]></title>
    <url>%2F2019%2F03%2F01%2Fflow-chart-support%2F</url>
    <content type="text"><![CDATA[写博客有时候需要使用流程图来说明整个工程，或者整个项目的一个大致流程； 一些笔记软件中也已经相继支持流程图的解析，但是默认安装的Hexo是不支持流程图解析的； 所以需要将流程图支持的模块安装到Hexo中，才能解析Markdown中的流程图； 下面是Hexo安装流程图模块的教程，主要包括： 模块选择 模块安装和设置 流程图绘制例子 模块选择目前的流程图模块主流的有3个，包括： mermaid模块 flowchart模块 sequence模块 mermaid支持流程、时序、甘地图，写法简便，最受欢迎，是流程图中的最大玩家。其他的两个是小众，但相当淡雅的玩家，不追求颜色多样，只是简单的纯黑色样式。个人还是首推mermaid的，多样化，选择更多；如果你是一位算法爱好者，理论研究人员，不追求流程图的颜色、搭配，喜欢黑白样式的流程图，那可以选择后两者。 所以，以下的教程将以mermaid安装进行介绍，其他的两种模块可以参考官方教程进行安装： flowchart官方：https://github.com/bubkoo/hexo-filter-flowchart sequence官方：https://github.com/bubkoo/hexo-filter-sequence 模块安装 安装模块 12#npm安装npm install hexo-filter-mermaid-diagrams 配置文件 123456789101112131415161718#编辑hexo的配置文件，_config.yml，追加以下内容# mermaid chartmermaid: ## mermaid url https://github.com/knsv/mermaid enable: true # default true version: &quot;7.1.2&quot; # default v7.1.2 options: # find more api options from https://github.com/knsv/mermaid/blob/master/src/mermaidAPI.js #startOnload: true // default true---#编辑NexT主题的脚注文件，即./themes/next/layout/_partials/footer.swig，追加以下内容&#123;% if (theme.mermaid.enable) %&#125; &lt;script src=&apos;https://unpkg.com/mermaid@&lt;%= theme.mermaid.version %&gt;/dist/mermaid.min.js&apos;&gt;&lt;/script&gt; &lt;script&gt; if (window.mermaid) &#123; mermaid.initialize(&#123;theme: &apos;forest&apos;&#125;); &#125; &lt;/script&gt;&#123;% endif %&#125; 一个栗子利用mermaid绘制流程图、时序图以及甘地图。 流程图123456graph TD#方向：TD上到下，LR左到右，RL右道左A[模块A] --&gt;|A1| B(模块B)B --&gt; C&#123;判断条件C&#125;C --&gt;|条件C1| D[模块D]C --&gt;|条件C2| E[模块E]C --&gt;|条件C3| F[模块F] graph TD A[模块A] -->|A1| B(模块B) B --> C{判断条件C} C -->|条件C1| D[模块D] C -->|条件C2| E[模块E] C -->|条件C3| F[模块F] 时序图123sequenceDiagramA-&gt;&gt;B: 是否已收到消息？B--&gt;&gt;A: 已收到消息 sequenceDiagram A->>B: 是否已收到消息？ B-->>A: 已收到消息 甘特图123456789gantttitle 甘特图dateFormat YYYY-MM-DDsection 项目A任务1 :a1, 2018-06-06, 30d任务2 :after a1 , 20dsection 项目B任务3 :2018-06-12 , 12d任务4 : 24d gantt title 甘特图 dateFormat YYYY-MM-DD section 项目A 任务1 :a1, 2018-06-06, 30d 任务2 :after a1 , 20d section 项目B 任务3 :2018-06-12 , 12d 任务4 : 24d 参考https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.htmlhttps://tyloafer.github.io/2018/04/21/hexo-mermaid/https://github.com/knsv/mermaidhttps://github.com/bubkoo/hexo-filter-flowcharthttps://github.com/bubkoo/hexo-filter-sequence]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Hexo</tag>
        <tag>flowchart</tag>
        <tag>流程图</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Github搭建博客]]></title>
    <url>%2F2019%2F02%2F28%2Fhow-to-build-your-blog-on-github%2F</url>
    <content type="text"><![CDATA[这是一个比较完整的Github Page的博客搭建教程，涵盖以下几点： Hexo框架安装 Next主题的安装和个性化 Hexo支持多设备方案 前几天终于搭建好了自己的博客站点，中间折腾了很多地方，权当学习，整理一下搭建过程的资料，写一个搭建的教程。 教程可能不同于网上单一的搭建教程，在网上搜集到的搭建教程要么是比较老的教程（=_=，弄得我走了很多弯路！），要么是一些比较零散的教程，或缺少一些部分。总而言之，缺少一种较为完整的搭建教程，从入手搭建到博客在不同设备之间正常迁移，并正常配置是教程的所有。本教程分为： 1）新建Github仓库 2）Hexo博客框架安装 3）安装NexT等个性化主题 4）添加NexT主题插件 5）多设备支持方案 6）其他 新建Github仓库请确认在该步骤前已经注册了一个Github账号。 进入https://github.com/{username}/页面，确保已经登陆账号； 点击右上角的+，会跳转到新建界面，然后必须以{username}.github.io名称新建一个人仓库，其他设置如下图所示： 拷贝新建仓库的git地址，如：https://github.com/{username}/{username}.github.io.git到文本备存。 Hexo博客框架安装 依赖环境：Node.js+npm 依赖环境安装教程 1234567#安装Node.jswget -qO- https://raw.github.com/creationix/nvm/v0.33.11/install.sh | sh#使用命令行vim ~/.profile添加环境变量 &amp; source ~/.profile使得nvm生效#然后利用nvm安装特定版本的node.jsnvm install 8.0.0#安装npmapt-get install npm 安装hexo框架 12#请确保已经正常安装Node.js+npm，然后使用命令行安装npm install -g hexo-cli 初始化Hexo项目和安装项目模块 1234#hexo初始化hexo init &lt;folder&gt;#安装项目模块cd &lt;folder&gt; &amp;&amp; npm install 项目文件分析 12345678910.├── _config.yml#网站配置文件├── package.json#项目的应用信息├── scaffolds#模版文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。├── source#资源文件夹，新建博客的存储文件夹| ├── _drafts| └── _posts└── themes#主题文件夹，可以在文件夹下安装不同的主题，并修改相关主题风格# 可以根据需要和要求对上述文件进行修改。 生成静态网页g/genarate```需要一秒左右的时间对整个项目工程进行编译，从而生成静态的网页。12345678+ 调试网页```hexo server```然后在浏览器中访问http://localhost:40000，将会看到类似如下的页面： ![](https://github.com/leaguecn/leenotes/raw/master/img/hexo-server.png) **如果没有看到，那就是环境出了问题，根据不同的问题自行debug。**+ 发布到Github仓库如果调试没有出现问题，那就可以发布到Github上的仓库，通过```https://&#123;username&#125;.github.io```访问验证配置是否正常，看到的界面应和调试所看到的界面一致。 首先安装hexo配置到git上的插件npm install hexo-deployer-git —save 之后修改_config.yml中的deploy字段属性deploy: type: git repo: https://github.com/{username}/{username}.github.io.git branch: master 配置到Githubhexo d/deploy123 + 写博客 新建博客postnamehexo new postname 编辑博客vim source/_posts/postname.md 生成静态网页并配置到仓库hexo clean &amp;&amp; hexo g/generate &amp;&amp; hexo d/deploy 12345678910111213141516+ Hexo常用命令 + hexo init &lt;folder&gt; #新建hexo项目工程 + hexo new postname #新建博客 + hexo generate/g #生成静态网页 + hexo deploy/d #配置静态网页到指定的仓库 + hexo server #建立本地服务 + hexo help #显示hexo帮助## 安装NexT等个性化主题 其实就是将主题文件夹next拷贝到上述项目的主题文件夹theme中。[HexT主题](https://theme-next.org/)风格简洁、优雅，目前已经更新到6.0.6版本（2019-02）。+ 进入上述Hexo新建项目文件夹并下载主题文件到主题theme文件夹下： cd hexogit clone https://github.com/theme-next/hexo-theme-next themes/next12+ 修改配置文件的主题属性 打开_config.yml配置文件，查找theme字段，注释掉原有属性，修改为nexttheme: next12+ 应用新的主题配置 参照上一节，生成静态网页然后配置到仓库hexo clean &amp;&amp; hexo g/generate &amp;&amp; hexo d/deploy1234567效果如下： ![](https://github.com/leaguecn/leenotes/raw/master/img/hexo-server.png)## 添加NexT主题插件+ 修改主题风格 修改next文件夹下的_config.yml文件中的scheme字段属性 Schemesscheme: Muse scheme: Mistscheme: Pisces12+ 设定菜单 修改next文件夹下的_config.yml文件中的menu字段属性 menu: home: / #主界面 categories: /categories #分类 about: /about #关于 archives: /archives #存档 tags: /tags #标签 commonweal: /404.html同时修改主目录下的_config.yml文件的language字段属性为zh-CN.yml language: zh-CN 1234567891011121314+ 修改布局 * sidebar * avatar * favoi.ico * 社交账号+ 增删部件 * 增加flagcount * 增加文字统计 * 增加本站搜索 * 删除底部logo+ 添加页面 添加标签页面hexo new page tags 编辑source/tags/index.md title: tagsdate: 2019-02-21 19:10:05 type: “tags”添加分类页面hexo new page categories 编辑source/categories/index.md title: categoriesdate: 2019-02-21 19:11:13 type: “categories”添加关于页面hexo new page about source/about/index.md title: about date: 2019-02-21 19:13:13关于我一只学习中的小菜鸟，欢迎留言讨论。 From Xuzhou QQ：10001Email: 10001@qq.com12+ 编辑博客的标签和分类 title: Github搭建个人博客date: 2019-02-27tags: npm hexo github 博客categories: 教程1234567891011121314+ 使更改生效/发布更改配置```hexo clean &amp;&amp; hexo g/generate &amp;&amp; hexo d/deploy```。## 多设备支持方案网络上的方案较为混乱，模糊不清。看了几个较为清晰的博客后大致理解了方案的原理。多设备支持是为了方便在多种设备中更新博客，方案的思路如下图所示：+ 新建分支对hexo的工程文件进行备份在原来的部署仓库中新建另一分支backup/hexo等分支，将分支设为默认分支+ 克隆静态网页文件 在原部署设备上clone部署仓库的默认分支backup/hexogit clone https://github.com/{username}/{username}.github.io.git12+ 合并部署文件 将原部署文件全部拷贝到{username}.github.io文件夹中cp hexoprjs {username}.github.io/ 12+ 推送所有的部署文件 移除theme文件夹下的.git文件夹rm -rf {username}.github.io/theme/.git git命令行推送部署文件到backup/hexo分支git add . &amp;&amp; git commit -m ‘- update’ &amp;&amp; git push 12+ 其他设备同步 直接拷贝部署仓库的默认分支backup/hexogit clone https://github.com/{username}/{username}.github.io.git 安装npm插件npm install 新建博客hexo new postname 发布博客hexo clean &amp;&amp; hexo g/generate &amp;&amp; hexo d/deploy 同步配置文件到部署仓库git add . &amp;&amp; git commit -m ‘- update’ &amp;&amp; git push 1234567891011总体思路是：拷贝默认分支中的hexo部署文件，安装npm插件，新建博客，每次发布博客后最好随手同步配置文件到分支backup/hexo。## 其他+ 可能在其他设备上clone仓库中的backup/hexo分支后，```npm install```会出现问题，这时需要根据不同的bug去网上找解决方法来debug了。+ 在其他设备上使用hexo deploy进行部署网页时，可能会遇到github page build不能运行的错误，同时会收到官方发来的Alert邮件，这时也是需要仁者见仁智者见智了。+ 关于博客公式和流程图的支持，需要另外安装插件，对公式和流程图block进行render,这里简单给出教程： + 公式支持mathjax,需要卸载```hexo-renderer-marked```安装``hexo-renderer-kramed``,然后在NexT主题配置文件激活以及在文章开头激活```mathjax: true```，具体参考[博客1](https://www.lefer.cn/posts/64106/)&amp;[博客2](https://blog.csdn.net/wgshun616/article/details/81019687)。 + 流程图支持，需要下列模块之一安装: hexo-filter-mermaid-diagrams hexo-filter-flowchart hexo-filter-sequence ``` 参考 1 https://hexo.io/zh-cn/docs/ 2 https://theme-next.org/ 3 http://www.cnblogs.com/syd192/p/6074323.html 4 https://www.lefer.cn/posts/64106/ 5 https://blog.csdn.net/wgshun616/article/details/81019687 6 https://www.liuyude.com/How_to_make_your_HEXO_blog_support_handwriting_flowchart.html]]></content>
      <categories>
        <category>教程</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>教程</tag>
        <tag>Hexo</tag>
        <tag>搭建博客</tag>
        <tag>NexT</tag>
        <tag>多设备</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[计算视觉SLAM工程师技能要求]]></title>
    <url>%2F2019%2F02%2F27%2Fslam-engineer-skills-demand%2F</url>
    <content type="text"><![CDATA[计算机视觉SLAM可以说是现在和以后较长一段时间里都比较火的研究方向，总结一下工程师的技能要求。分为下面几方面内容： 基础知识学习要求 进步历程篇 看了较多的这类招聘，基本要求包括： 精通C/C++语言 熟练使用OpenCV、g2o、BA开源库 掌握SLAM、SFM等算法原理 具有较强的学习能力和实践能力，可以阅读计算机视觉顶级期刊论文并进行相关算法的移植 要求更高一点的是： 发表过CVPR/ECCV/ICCV等顶会的论文 熟悉高性能加速工具GPGPU、CUDA 结合招聘的要求和相关博客内容以及自己的经验（菜逼的我，还是有点经验的;)），整理一些这方面的内容，希望对网友有所帮助。 学习要求技能： 【熟练使用C和C++】 《21天学通C++》 《Effective C++》 【熟悉常用的opencv，等库】 《opencv 3入门》 《学习 opencv》 【熟悉linux下编程】 熟悉cmake编程 熟悉Kdevelop 以及调试 熟练使用VIM编辑器 熟练markdown文档编写 【QT下的编程】 熟悉QT软件以及基本的语法功能 【熟悉常见的slam框架】 跟着高翔的14讲走就行 【机器学习数学知识】 高数，矩阵分析，概率论 【基本的数据结构与算法】 《数据结构，邓俊辉》 《算法竞赛入门》睡觉 【熟悉模式识别，多视图几何，计算机视觉等理论知识】 《计算机视觉》 《多视图几何》某几章 《模式识别》 项目经历： 【C++ demo】雷霆战机C++与QT实现 【opencv demo】 【slam easy demo】 进步历程基础篇 《21天学通 C++ 》 《数据结构（C++ 语言版）》 《Effective C++ 》 《算法竞赛入门》 高数/矩阵分析/概率论 课程 《线性估计》 《An Invitation to 3-D Vision》 技能篇 《视觉slam十四讲》 《OpenCV3 入门》 《学习 opencv》 专业知识背景 《计算机视觉》 《多视图几何》某几章 《模式识别》 《概率机器人学》 《Computer Vision Algorithms and Applications》 《Computer vision A modern approach 2nd》 参考 https://blog.csdn.net/fanjiule/article/details/80851233 https://zhuanlan.zhihu.com/p/22266788]]></content>
      <categories>
        <category>总结</category>
      </categories>
      <tags>
        <tag>计算机视觉</tag>
        <tag>SLAM</tag>
        <tag>工程师</tag>
        <tag>技能</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[OpenCV2开发笔记]]></title>
    <url>%2F2019%2F02%2F26%2FOpenCV2%2F</url>
    <content type="text"><![CDATA[这是一篇OpenCV2的开发笔记，根据自己学习OpenCV开源库笔记整理，包含以下几方面内容： OpenCV2的环境配置 简单图像处理 相机标定 三维重建 机器学习 目标检测 OpenCV简介OpenCV是计算视觉开源库，由C和C++语言编写，跨多个平台，包括windos、linux、Mac oS、Android等平台。包含图像处理和计算视觉中的大部分函数，可以用于进行图像分类、目标识别、相机标定、立体视觉、机器学习中，提供500多个易于上手的函数。由Intel公司员工Gary Bradski(got from text book:learning OpenCV3)发起的该项目，专注于高性能计算和实时应用，得到了Google和Intel公司的支持，并被IBM、Microsoft、Intel、SONY、Siemens和Google公司采用，同时应用于Stanford、MIT、CMU、Cambridge和INRIA等研究中心。该项目在全世界范围内被广泛应用，拥有将近5w个会员，在中国、日本、俄罗斯、欧洲诸国中广受欢迎。 OpenCV安装与配置入门知识图像处理相机标定三维重建机器学习目标检测 参考资料 https://opencv.org/about.html https://baike.baidu.com/item/opencv/10320623]]></content>
      <categories>
        <category>Note</category>
      </categories>
      <tags>
        <tag>opencv</tag>
        <tag>Tutorial</tag>
        <tag>计算机视觉</tag>
        <tag>教程</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[为Hexo添加数学公式支持|math-equation-support]]></title>
    <url>%2F2019%2F02%2F21%2Fmath-equation%2F</url>
    <content type="text"><![CDATA[Hexo默认支持数学公式渲染，但默认不开启； 但是在配置文件__config.yml下开启后，发现公式block还是没有被render； 解决办法是卸载原来的渲染模块，安装kramed渲染模块，之后进行配置。 下面是安装该模块的教程以及一些MD的数学公式例子，可以根据渲染效果选择其中一种写法。|There are three kinds of math equation styles in markdown file in generally. But all these styles are suitable for markdown? Or which one is better? Here are the samples. 数学公式支持模块安装|Installation note of the Hexo-renderer-kramed 卸载默认的渲染模块 1npm uninstall hexo-renderer-marked --save 安装kramed模块 1npm install hexo-renderer-kramed --save 修改inline.js文件 12345678#文件位于./node_modules/kramed/lib/rules/inline.js#更改escape的正则表达式// escape: /^\\([\\`*&#123;&#125;\[\]()#$+\-.!_&gt;])/, escape: /^\\([`*\[\]()#$+\-.!_&gt;])/],#同时更改em的正则表达式// em: /^\b_((?:__|[\s\S])+?)_\b|^\*((?:\*\*|[\s\S])+?)\*(?!\*)/, em: /^\*((?:\*\*|[\s\S])+?)\*(?!\*)/, 在NexT主题下的配置文件____config.yml，开启mathjax渲染 12345678910#Math Equations Render Supportmath: enable: true # Default(true) will load mathjax/katex script on demand # That is it only render those page who has &apos;mathjax: true&apos; in Front Matter. # If you set it to false, it will load mathjax/katex srcipt EVERY PAGE. per_page: true engine: mathjax #engine: katex 在博客的顶部声明中添加mathjax渲染声明 12345678---title: ***教程date: 2019-03-02 12:01:30tags: - 教程 - ***mathjax: true-- 调试公式渲染效果 123hexo clean &amp;&amp; hexo g &amp;&amp; hexo server#然后在http://localhost:4000中查看效果，如果没有出错、异常，就可以配置到博客仓库中hexo d 三种常见的数学公式写法|3 kinds of Math Equation style in MD file 图片形式|Picture style equation 12![](https://latex.codecogs.com/svg.latex?\Large&amp;space;x=\frac&#123;-b\pm\sqrt&#123;b^2-4ac&#125;&#125;&#123;2a&#125;)&lt;/div&gt;![](http://latex.codecogs.com/gif.latex?h%28x%29%3D%5Ctheta_0%20x%20&amp;plus;%20%5Ctheta_1%20x)&lt;/div&gt; MD支持的形式|MD support style equation 123456\begin&#123;equation&#125;x=\frac&#123;-b\pm\sqrt&#123;b^2-4ac&#125;&#125;&#123;2a&#125; \end&#123;equation&#125; \begin&#123;equation&#125;h(x)=\theta_0 x + \theta_1 x\end&#123;equation&#125; \begin{equation}x=\frac{-b\pm\sqrt{b^2-4ac}}{2a}\end{equation} \begin{equation}h(x)=\theta_0 x + \theta_1 x\end{equation} MathJax的形式|MathJax style equation 123456$$x=\frac&#123;-b\pm\sqrt&#123;b^2-4ac&#125;&#125;&#123;2a&#125;$$ $$h(x)=\theta_0 x + \theta_1 x$$ x=\frac{-b\pm\sqrt{b^2-4ac}}{2a} h(x)=\theta_0 x + \theta_1 x 效果预览|Here is shot of normal display in html thread. Reference https://stackoverflow.com/questions/11256433/how-to-show-math-equations-in-general-githubs-markdownnot-githubs-blog https://www.zhihu.com/question/26887527 https://stackoverflow.com/questions/27972177/how-to-enable-mathjax-rendering-in-sublime-text-markdown-preview http://latex.codecogs.com/eqneditor/editor.php https://blog.csdn.net/Quest_sec/article/details/78068960 https://www.lefer.cn/posts/64106/ https://blog.csdn.net/wgshun616/article/details/81019687]]></content>
      <categories>
        <category>Tutorial</category>
      </categories>
      <tags>
        <tag>Tutorial</tag>
        <tag>教程</tag>
        <tag>Hexo</tag>
        <tag>Math</tag>
        <tag>Equation</tag>
        <tag>数学</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Android awesome apps|安卓优秀应用集]]></title>
    <url>%2F2019%2F02%2F21%2Fandroid-awesome-apps%2F</url>
    <content type="text"><![CDATA[There are many apps in android play store. But there are a few applications to be awesome. I summary list of apps what I had used, which have good performent. I hope them will help you in some way. I also split these apps into three catergories: Daily driving, Assistance &amp; System enhence. Just enjoy it. Android awesome apps remarkDaily driving Video player MX Player VLC PotPlayer Online music NetEase Music QQ Music Browser Chrome(variant: kiwibrowser for snapdrogen chips) Via(simple &amp; pure) Map GoogleMap Amap(in China) 3rd Camera Google Camera(nice functions &amp; powerful night sight) OpenCamera(pure but rich function on manual control for camera) Social app Twitter Facebook Telegram Weibo QQ Wechat Assistance Dictionary Mdict+mdx file GoldenDict kiwix+zim file Books reader Moon+ Reader Librera PDF reader Foxit PDF Mobile office WPS office OfficeSuite Polaris office(&lt;5.2) Text editor QuickEdit Jota+ Note Evernote Notes Markdown editor MarkdownX Picture recognition Quick PDF Scanner Photo editor PicsArt Snapseed System enhence VPN Wuma VPN SSH JuiceSSH 3rd file explorer Root Explorer X-plore Data backup Titanium Backup Downloader IDM+ ADM Hack app Lucky Patcher Root manager SuperSU Magisk System cleaner SD Maid by ligure on 2019-02-20 One More ThingDeploy linuxYep, I mean that you can deploy linux on android phone. Tools linuxdeploy.apk tutorial en tutorial zh 教程1 教程2 教程3]]></content>
      <tags>
        <tag>Android</tag>
        <tag>APP</tag>
        <tag>Summary</tag>
        <tag>安卓</tag>
        <tag>应用</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Post of blog website initialization|博客开贴公告]]></title>
    <url>%2F2019%2F02%2F20%2FREADME-md%2F</url>
    <content type="text"><![CDATA[Welcome to this website, thanks for your visit!|欢迎光顾本站，非常感谢您的来访！ 这是本站的第一篇博客，即博客开贴公告！ About|介绍This is leaguecn’s blog website. Build information|建站信息 Built via Hexo+Nodejs+github page view(repository username.github.io). Using NexT theme on 2019-02-21 Credits|感谢I really know that this website deploying successfully under many personal blogs help. So I wanna say thanks for these person who post the meaningful blogs which could fix the issue what I encounted. Especially in this website building progressing, like: cyzus wuxianlin Lines other persons I forgot(sorry for my bad memory) Reference|参考 https://cyzus.github.io/2015/06/21/github-build-blog/ https://www.jianshu.com/p/3ff20be8574c https://www.jianshu.com/p/265b2c653e6f https://hexo.io/ https://www.titanjun.top/]]></content>
      <tags>
        <tag>Post</tag>
        <tag>Article</tag>
        <tag>公告</tag>
      </tags>
  </entry>
</search>
